/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./cartridges/int_adyen_SFRA/cartridge/client/default/js/adyenCheckout.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./cartridges/int_adyen_SFRA/cartridge/client/default/js/adyenCheckout.js":
/*!********************************************************************************!*\
  !*** ./cartridges/int_adyen_SFRA/cartridge/client/default/js/adyenCheckout.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

  "use strict";
  eval("\n\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// eslint-disable-next-line no-unused-vars\nvar maskedCardNumber;\nvar MASKED_CC_PREFIX = '************';\nvar selectedMethod;\nvar componentsObj = {};\nvar checkoutConfiguration = window.Configuration;\nvar formErrorsExist;\nvar isValid = false;\nvar checkout;\n$('#dwfrm_billing').submit(function (e) {\n  e.preventDefault();\n  var form = $(this);\n  var url = form.attr('action');\n  $.ajax({\n    type: 'POST',\n    url: url,\n    data: form.serialize(),\n    async: false,\n    success: function success(data) {\n      formErrorsExist = 'fieldErrors' in data;\n    }\n  });\n});\n\ncheckoutConfiguration.onChange = function (state) {\n  var type = state.data.paymentMethod.type;\n  isValid = state.isValid;\n\n  if (!componentsObj[type]) {\n    componentsObj[type] = {};\n  }\n\n  componentsObj[type].isValid = isValid;\n  componentsObj[type].stateData = state.data;\n};\n\ncheckoutConfiguration.showPayButton = false;\ncheckoutConfiguration.paymentMethodsConfiguration = {\n  card: {\n    enableStoreDetails: showStoreDetails,\n    onBrand: function onBrand(brandObject) {\n      document.querySelector('#cardType').value = brandObject.brand;\n    },\n    onFieldValid: function onFieldValid(data) {\n      if (data.endDigits) {\n        maskedCardNumber = MASKED_CC_PREFIX + data.endDigits;\n        document.querySelector('#cardNumber').value = maskedCardNumber;\n      }\n    },\n    onChange: function onChange(state) {\n      isValid = state.isValid;\n      var componentName = state.data.paymentMethod.storedPaymentMethodId ? \"storedCard\".concat(state.data.paymentMethod.storedPaymentMethodId) : state.data.paymentMethod.type;\n\n      if (componentName === selectedMethod || selectedMethod === 'bcmc') {\n        componentsObj[selectedMethod].isValid = isValid;\n        componentsObj[selectedMethod].stateData = state.data;\n      }\n    }\n  },\n  boletobancario: {\n    personalDetailsRequired: true,\n    // turn personalDetails section on/off\n    billingAddressRequired: false,\n    // turn billingAddress section on/off\n    showEmailAddress: false,\n    // allow shopper to specify their email address\n    // Optionally prefill some fields, here all fields are filled:\n    data: {\n      firstName: document.getElementById('shippingFirstNamedefault').value,\n      lastName: document.getElementById('shippingLastNamedefault').value\n    }\n  },\n  paywithgoogle: {\n    environment: window.Configuration.environment,\n    onSubmit: function onSubmit() {\n      assignPaymentMethodValue();\n      document.querySelector('button[value=\"submit-payment\"]').disabled = false;\n      document.querySelector('button[value=\"submit-payment\"]').click();\n    },\n    configuration: {\n      gatewayMerchantId: window.merchantAccount\n    },\n    showPayButton: true,\n    buttonColor: 'white'\n  },\n  paypal: {\n    environment: window.Configuration.environment,\n    intent: 'capture',\n    onSubmit: function onSubmit(state, component) {\n      assignPaymentMethodValue();\n      document.querySelector('#adyenStateData').value = JSON.stringify(componentsObj[selectedMethod].stateData);\n      paymentFromComponent(state.data, component);\n    },\n    onCancel: function onCancel(data, component) {\n      paymentFromComponent({\n        cancelTransaction: true\n      }, component);\n    },\n    onError: function onError(error, component) {\n      if (component) {\n        component.setStatus('ready');\n      }\n\n      document.querySelector('#showConfirmationForm').submit();\n    },\n    onAdditionalDetails: function onAdditionalDetails(state) {\n      document.querySelector('#additionalDetailsHidden').value = JSON.stringify(state.data);\n      document.querySelector('#showConfirmationForm').submit();\n    },\n    onClick: function onClick(data, actions) {\n      $('#dwfrm_billing').trigger('submit');\n\n      if (formErrorsExist) {\n        return actions.reject();\n      }\n    }\n  },\n  mbway: {\n    showPayButton: true,\n    onSubmit: function onSubmit(state, component) {\n      $('#dwfrm_billing').trigger('submit');\n      assignPaymentMethodValue();\n\n      if (!formErrorsExist) {\n        document.getElementById('component_mbway').querySelector('button').disabled = true;\n        paymentFromComponent(state.data, component);\n        document.querySelector('#adyenStateData').value = JSON.stringify(state.data);\n      }\n    },\n    onError: function onError()\n    /* error, component */\n    {\n      document.querySelector('#showConfirmationForm').submit();\n    },\n    onAdditionalDetails: function onAdditionalDetails(state\n    /* , component */\n    ) {\n      document.querySelector('#additionalDetailsHidden').value = JSON.stringify(state.data);\n      document.querySelector('#showConfirmationForm').submit();\n    }\n  },\n  afterpay_default: {\n    visibility: {\n      personalDetails: 'editable',\n      billingAddress: 'hidden',\n      deliveryAddress: 'hidden'\n    },\n    data: {\n      personalDetails: {\n        firstName: document.querySelector('#shippingFirstNamedefault').value,\n        lastName: document.querySelector('#shippingLastNamedefault').value,\n        telephoneNumber: document.querySelector('#shippingPhoneNumberdefault').value,\n        shopperEmail: document.querySelector('#email').value\n      }\n    }\n  },\n  facilypay_3x: {\n    visibility: {\n      personalDetails: 'editable',\n      billingAddress: 'hidden',\n      deliveryAddress: 'hidden'\n    },\n    data: {\n      personalDetails: {\n        firstName: document.querySelector('#shippingFirstNamedefault').value,\n        lastName: document.querySelector('#shippingLastNamedefault').value,\n        telephoneNumber: document.querySelector('#shippingPhoneNumberdefault').value,\n        shopperEmail: document.querySelector('#email').value\n      }\n    }\n  }\n};\n\nif (window.installments) {\n  try {\n    var installments = JSON.parse(window.installments);\n    checkoutConfiguration.paymentMethodsConfiguration.card.installments = installments;\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nif (window.paypalMerchantID !== 'null') {\n  checkoutConfiguration.paymentMethodsConfiguration.paypal.merchantId = window.paypalMerchantID;\n}\n\nif (window.googleMerchantID !== 'null' && window.Configuration.environment === 'live') {\n  checkoutConfiguration.paymentMethodsConfiguration.paywithgoogle.configuration.merchantIdentifier = window.googleMerchantID;\n}\n/**\n * Changes the \"display\" attribute of the selected method from hidden to visible\n */\n\n\nfunction displaySelectedMethod(type) {\n  selectedMethod = type;\n  resetPaymentMethod();\n\n  if (['paypal', 'paywithgoogle', 'mbway'].indexOf(type) > -1) {\n    document.querySelector('button[value=\"submit-payment\"]').disabled = true;\n  } else {\n    document.querySelector('button[value=\"submit-payment\"]').disabled = false;\n  }\n\n  document.querySelector(\"#component_\".concat(type)).setAttribute('style', 'display:block');\n}\n/**\n * To avoid re-rendering components twice, unmounts existing components from payment methods list\n */\n\n\nfunction unmountComponents() {\n  var promises = Object.entries(componentsObj).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        val = _ref2[1];\n\n    delete componentsObj[key];\n    return resolveUnmount(key, val);\n  });\n  return Promise.all(promises);\n}\n\nfunction resolveUnmount(key, val) {\n  try {\n    return Promise.resolve(val.node.unmount(\"component_\".concat(key)));\n  } catch (e) {\n    // try/catch block for val.unmount\n    return Promise.resolve(false);\n  }\n}\n/**\n * checks if payment method is blocked and returns a boolean accordingly\n */\n\n\nfunction isMethodTypeBlocked(methodType) {\n  var blockedMethods = ['bcmc_mobile_QR', 'applepay', 'cup', 'wechatpay', 'wechatpay_pos', 'wechatpaySdk', 'wechatpayQr'];\n  return blockedMethods.includes(methodType);\n}\n/**\n * Calls getPaymenMethods and then renders the retrieved payment methods (including card component)\n */\n\n\nfunction renderGenericComponent() {\n  return _renderGenericComponent.apply(this, arguments);\n}\n\nfunction _renderGenericComponent() {\n  _renderGenericComponent = _asyncToGenerator( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(Object.keys(componentsObj).length !== 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return unmountComponents();\n\n          case 3:\n            getPaymentMethods(function (data) {\n              var paymentMethod;\n              var i;\n              checkoutConfiguration.paymentMethodsResponse = data.AdyenPaymentMethods;\n\n              if (data.amount) {\n                checkoutConfiguration.amount = data.amount;\n                checkoutConfiguration.paymentMethodsConfiguration.paypal.amount = data.amount;\n              }\n\n              if (data.countryCode) {\n                checkoutConfiguration.countryCode = data.countryCode;\n              }\n\n              checkout = new AdyenCheckout(checkoutConfiguration);\n              document.querySelector('#paymentMethodsList').innerHTML = '';\n\n              if (data.AdyenPaymentMethods.storedPaymentMethods) {\n                for (i = 0; i < checkout.paymentMethodsResponse.storedPaymentMethods.length; i++) {\n                  paymentMethod = checkout.paymentMethodsResponse.storedPaymentMethods[i];\n\n                  if (paymentMethod.supportedShopperInteractions.includes('Ecommerce')) {\n                    renderPaymentMethod(paymentMethod, true, data.ImagePath);\n                  }\n                }\n              }\n\n              data.AdyenPaymentMethods.paymentMethods.forEach(function (pm, i) {\n                !isMethodTypeBlocked(pm.type) && renderPaymentMethod(pm, false, data.ImagePath, data.AdyenDescriptions[i].description);\n              });\n\n              if (data.AdyenConnectedTerminals && data.AdyenConnectedTerminals.uniqueTerminalIds && data.AdyenConnectedTerminals.uniqueTerminalIds.length > 0) {\n                var posTerminals = document.querySelector('#adyenPosTerminals');\n\n                while (posTerminals.firstChild) {\n                  posTerminals.removeChild(posTerminals.firstChild);\n                }\n\n                addPosTerminals(data.AdyenConnectedTerminals.uniqueTerminalIds);\n              }\n\n              var firstPaymentMethod = document.querySelector('input[type=radio][name=brandCode]');\n              firstPaymentMethod.checked = true;\n              displaySelectedMethod(firstPaymentMethod.value);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _renderGenericComponent.apply(this, arguments);\n}\n\nfunction renderPaymentMethod(paymentMethod, storedPaymentMethodBool, path) {\n  var description = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var node;\n  var paymentMethodsUI = document.querySelector('#paymentMethodsList');\n  var li = document.createElement('li');\n  var paymentMethodID = storedPaymentMethodBool ? \"storedCard\".concat(paymentMethod.id) : paymentMethod.type;\n  var isSchemeNotStored = paymentMethod.type === 'scheme' && !storedPaymentMethodBool;\n  var paymentMethodImage = storedPaymentMethodBool ? \"\".concat(path).concat(paymentMethod.brand, \".png\") : \"\".concat(path).concat(paymentMethod.type, \".png\");\n  var cardImage = \"\".concat(path, \"card.png\");\n  var imagePath = isSchemeNotStored ? cardImage : paymentMethodImage;\n  var label = storedPaymentMethodBool ? \"\".concat(paymentMethod.name, \" \").concat(MASKED_CC_PREFIX).concat(paymentMethod.lastFour) : \"\".concat(paymentMethod.name);\n  var liContents = \"\\n                              <input name=\\\"brandCode\\\" type=\\\"radio\\\" value=\\\"\".concat(paymentMethodID, \"\\\" id=\\\"rb_\").concat(paymentMethodID, \"\\\">\\n                              <img class=\\\"paymentMethod_img\\\" src=\\\"\").concat(imagePath, \"\\\" ></img>\\n                              <label id=\\\"lb_\").concat(paymentMethodID, \"\\\" for=\\\"rb_\").concat(paymentMethodID, \"\\\">\").concat(label, \"</label>\\n                             \");\n\n  if (description) {\n    liContents += \"<p>\".concat(description, \"</p>\");\n  }\n\n  var container = document.createElement('div');\n  li.innerHTML = liContents;\n  li.classList.add('paymentMethod');\n\n  if (storedPaymentMethodBool) {\n    node = checkout.create('card', paymentMethod);\n\n    if (!componentsObj[paymentMethodID]) {\n      componentsObj[paymentMethodID] = {};\n    }\n\n    componentsObj[paymentMethodID].node = node;\n  } else {\n    var fallback = getFallback(paymentMethod.type);\n\n    if (fallback) {\n      var template = document.createElement('template');\n      template.innerHTML = fallback;\n      container.append(template.content);\n    } else {\n      try {\n        node = checkout.create(paymentMethod.type);\n\n        if (!componentsObj[paymentMethodID]) {\n          componentsObj[paymentMethodID] = {};\n        }\n\n        componentsObj[paymentMethodID].node = node;\n      } catch (e) {} // eslint-disable-line no-empty\n\n    }\n  }\n\n  container.classList.add('additionalFields');\n  container.setAttribute('id', \"component_\".concat(paymentMethodID));\n  container.setAttribute('style', 'display:none');\n  li.append(container);\n  paymentMethodsUI.append(li);\n\n  if (paymentMethod.type !== 'paywithgoogle') {\n    node && node.mount(container);\n  } else {\n    node.isAvailable().then(function () {\n      node.mount(container);\n    })[\"catch\"](function () {}); // eslint-disable-line no-empty\n  }\n\n  var input = document.querySelector(\"#rb_\".concat(paymentMethodID));\n\n  input.onchange = function (event) {\n    displaySelectedMethod(event.target.value);\n  };\n\n  if (paymentMethodID === 'giropay') {\n    container.innerHTML = '';\n  }\n\n  if (componentsObj[paymentMethodID] && !container.childNodes[0]) {\n    componentsObj[paymentMethodID].isValid = true;\n  }\n} // eslint-disable-next-line no-unused-vars\n\n\nfunction addPosTerminals(terminals) {\n  var terminalSelect = document.createElement('select');\n  terminalSelect.id = 'terminalList';\n\n  for (var t in terminals) {\n    var option = document.createElement('option');\n    option.value = terminals[t];\n    option.text = terminals[t];\n    terminalSelect.appendChild(option);\n  }\n\n  document.querySelector('#adyenPosTerminals').append(terminalSelect);\n}\n\nfunction resetPaymentMethod() {\n  $('#requiredBrandCode').hide();\n  $('#selectedIssuer').val('');\n  $('#adyenIssuerName').val('');\n  $('#dateOfBirth').val('');\n  $('#telephoneNumber').val('');\n  $('#gender').val('');\n  $('#bankAccountOwnerName').val('');\n  $('#bankAccountNumber').val('');\n  $('#bankLocationId').val('');\n  $('.additionalFields').hide();\n}\n/**\n * Makes an ajax call to the controller function GetPaymentMethods\n */\n\n\nfunction getPaymentMethods(paymentMethods) {\n  $.ajax({\n    url: 'Adyen-GetPaymentMethods',\n    type: 'get',\n    success: function success(data) {\n      paymentMethods(data);\n    }\n  });\n}\n/**\n * Makes an ajax call to the controller function PaymentFromComponent. Used by certain payment methods like paypal\n */\n\n\nfunction paymentFromComponent(data, component) {\n  $.ajax({\n    url: 'Adyen-PaymentFromComponent',\n    type: 'post',\n    data: {\n      data: JSON.stringify(data),\n      paymentMethod: document.querySelector('#adyenPaymentMethodName').value\n    },\n    success: function success(data) {\n      if (data.orderNo) {\n        document.querySelector('#merchantReference').value = data.orderNo;\n      }\n\n      if (data.orderToken) {\n        document.querySelector('#orderToken').value = data.orderToken;\n      }\n\n      if (data.fullResponse && data.fullResponse.action) {\n        component.handleAction(data.fullResponse.action);\n      } else {\n        document.querySelector('#showConfirmationForm').submit();\n      }\n    }\n  }).fail(function () {});\n} // Submit the payment\n\n\n$('button[value=\"submit-payment\"]').on('click', function () {\n  if (document.querySelector('#selectedPaymentOption').value === 'AdyenPOS') {\n    document.querySelector('#terminalId').value = document.querySelector('#terminalList').value;\n    return true;\n  }\n\n  assignPaymentMethodValue();\n  validateComponents();\n  return showValidation();\n});\n\nfunction assignPaymentMethodValue() {\n  var adyenPaymentMethod = document.querySelector('#adyenPaymentMethodName');\n  adyenPaymentMethod.value = document.querySelector(\"#lb_\".concat(selectedMethod)).innerHTML;\n}\n\nfunction showValidation() {\n  var input;\n\n  if (componentsObj[selectedMethod] && !componentsObj[selectedMethod].isValid) {\n    componentsObj[selectedMethod].node.showValidation();\n    return false;\n  }\n\n  if (selectedMethod === 'ach') {\n    var inputs = document.querySelectorAll('#component_ach > input');\n    inputs = Object.values(inputs).filter(function (input) {\n      return !(input.value && input.value.length > 0);\n    });\n\n    var _iterator = _createForOfIteratorHelper(inputs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        input = _step.value;\n        input.classList.add('adyen-checkout__input--error');\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (inputs.length > 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (selectedMethod === 'ratepay') {\n    input = document.querySelector('#dateOfBirthInput');\n\n    if (!(input.value && input.value.length > 0)) {\n      input.classList.add('adyen-checkout__input--error');\n      return false;\n    }\n\n    return true;\n  }\n\n  return true;\n}\n\nfunction validateCustomInputField(input) {\n  if (input.value === '') {\n    input.classList.add('adyen-checkout__input--error');\n  } else if (input.value.length > 0) {\n    input.classList.remove('adyen-checkout__input--error');\n  }\n}\n/**\n * Assigns stateData value to the hidden stateData input field so it's sent to the backend for processing\n */\n\n\nfunction validateComponents() {\n  if (document.querySelector('#component_ach')) {\n    var inputs = document.querySelectorAll('#component_ach > input');\n\n    var _iterator2 = _createForOfIteratorHelper(inputs),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var input = _step2.value;\n\n        input.onchange = function () {\n          validateCustomInputField(this);\n        };\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  if (document.querySelector('#dateOfBirthInput')) {\n    document.querySelector('#dateOfBirthInput').onchange = function () {\n      validateCustomInputField(this);\n    };\n  }\n\n  var stateData;\n\n  if (componentsObj[selectedMethod] && componentsObj[selectedMethod].stateData) {\n    stateData = componentsObj[selectedMethod].stateData;\n  } else {\n    stateData = {\n      paymentMethod: {\n        type: selectedMethod\n      }\n    };\n  }\n\n  if (selectedMethod === 'ach') {\n    var bankAccount = {\n      ownerName: document.querySelector('#bankAccountOwnerNameValue').value,\n      bankAccountNumber: document.querySelector('#bankAccountNumberValue').value,\n      bankLocationId: document.querySelector('#bankLocationIdValue').value\n    };\n    stateData.paymentMethod = _objectSpread(_objectSpread({}, stateData.paymentMethod), {}, {\n      bankAccount: bankAccount\n    });\n  } else if (selectedMethod === 'ratepay') {\n    if (document.querySelector('#genderInput').value && document.querySelector('#dateOfBirthInput').value) {\n      stateData.shopperName = {\n        gender: document.querySelector('#genderInput').value\n      };\n      stateData.dateOfBirth = document.querySelector('#dateOfBirthInput').value;\n    }\n  }\n\n  document.querySelector('#adyenStateData').value = JSON.stringify(stateData);\n}\n/**\n * Contains fallback components for payment methods that don't have an Adyen web component yet\n */\n\n\nfunction getFallback(paymentMethod) {\n  var ach = \"<div id=\\\"component_ach\\\">\\n                    <span class=\\\"adyen-checkout__label\\\">Bank Account Owner Name</span>\\n                    <input type=\\\"text\\\" id=\\\"bankAccountOwnerNameValue\\\" class=\\\"adyen-checkout__input\\\">\\n                    <span class=\\\"adyen-checkout__label\\\">Bank Account Number</span>\\n                    <input type=\\\"text\\\" id=\\\"bankAccountNumberValue\\\" class=\\\"adyen-checkout__input\\\" maxlength=\\\"17\\\" >\\n                    <span class=\\\"adyen-checkout__label\\\">Routing Number</span>\\n                    <input type=\\\"text\\\" id=\\\"bankLocationIdValue\\\" class=\\\"adyen-checkout__input\\\" maxlength=\\\"9\\\" >\\n                 </div>\";\n  var ratepay = \"<span class=\\\"adyen-checkout__label\\\">Gender</span>\\n                    <select id=\\\"genderInput\\\" class=\\\"adyen-checkout__input\\\">\\n                        <option value=\\\"MALE\\\">Male</option>\\n                        <option value=\\\"FEMALE\\\">Female</option>\\n                    </select>\\n                    <span class=\\\"adyen-checkout__label\\\">Date of birth</span>\\n                    <input id=\\\"dateOfBirthInput\\\" class=\\\"adyen-checkout__input\\\" type=\\\"date\\\"/>\";\n  var fallback = {\n    ach: ach,\n    ratepay: ratepay\n  };\n  return fallback[paymentMethod];\n}\n\nmodule.exports = {\n  methods: {\n    renderGenericComponent: renderGenericComponent\n  }\n};\n\n//# sourceURL=webpack:///./cartridges/int_adyen_SFRA/cartridge/client/default/js/adyenCheckout.js?");
  
  /***/ }),
  
  /***/ "./node_modules/@babel/runtime/regenerator/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
    \**********************************************************/
  /*! no static exports found */
  /***/ (function(module, exports, __webpack_require__) {
  
  eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/regenerator/index.js?");
  
  /***/ }),
  
  /***/ "./node_modules/regenerator-runtime/runtime.js":
  /*!*****************************************************!*\
    !*** ./node_modules/regenerator-runtime/runtime.js ***!
    \*****************************************************/
  /*! no static exports found */
  /***/ (function(module, exports, __webpack_require__) {
  
  eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n\n\n//# sourceURL=webpack:///./node_modules/regenerator-runtime/runtime.js?");
  
  /***/ })
  
  /******/ });